    let rightConst
        :   ∀(f : Type → Type)
          → ∀(functor : ./Functor  f)
          → ∀(a : Type)
          → ∀(b : Type)
          → f a
          → b
          → f b
        =   λ(f : Type → Type)
          → λ(functor : ./Functor  f)
          → λ(a : Type)
          → λ(b : Type)
          → λ(fa : f a)
          → λ(val : b)
          → functor.map a b (λ(aVal : a) → val) fa

in  rightConst
